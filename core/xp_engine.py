#xp_engine.py file

import json
import os


DB_PATH = os.path.join('db', 'users.json')

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def load_users():
	if not os.path.exists(DB_PATH):
		return{}
	with open(DB_PATH, 'r', encoding='utf-8') as f:
		return json.load(f)
#-------------------------------------------------------------------------------------------------------#

#–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def save_users(users: dict):
	with open(DB_PATH, 'w', encoding='utf-8') as f:
		json.dump(users, f, ensure_ascii=False, indent=4)
#-------------------------------------------------------------------------------------------------------#

#–ö–ª–∞—Å—Å –ø—Ä–æ–∫–∞—á–∫–∏
class XPManager:
	def __init__(self, user_id: int):
		self.user_id = str(user_id)
		self.users = load_users()

		# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —Å–æ–∑–¥–∞—ë–º –µ–≥–æ
		if self.user_id not in self.users:
			self.users[self.user_id] = {
				'experience': 0,
				'level': 1,
			}
		self.user = self.users[self.user_id]

	# –¢–µ–∫—É—â–∏–π XP
	@property
	def xp(self):
		return self.user.get('experience', 0)

	# –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å
	@property
	def level(self):
		return self.user.get('level', 1)

	#–î–æ–±–∞–≤–ª—è–µ–º XP
	def add_xp(self, amount: int):
		self.user['experience'] += amount

		# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å
		while self.user['experience'] >= self.level * 100:
			self.user['experience'] -= self.level * 100
			self.user['level'] += 1
			
		self.save()

	# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
	def save(self):
		self.users[self.user_id] = self.user
		save_users(self.users)

	#–í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∫ —Ç–µ–∫—Å—Ç
	def status(self):
		return f"üèÖ –£—Ä–æ–≤–µ–Ω—å: {self.level} | üìà XP: {self.xp}/{self.level * 100}"
#-------------------------------------------------------------------------------------------------------#


# bot/scheduler.py file
from datetime import datetime

from aiogram import Bot
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger

from core.content_ai import generate_reply
from core.xp_engine import load_users, XPManager

scheduler = AsyncIOScheduler()

# –£—Ç—Ä–µ–Ω–Ω—è—è –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—è
async def morning_affirmation(bot: Bot):
	print(f"‚è∞ –£—Ç—Ä–µ–Ω–Ω—è—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ {datetime.now()}")
	users = load_users()
	for user_id in users:
		user_id_int = int(user_id)

		xp = XPManager(user_id_int)
		xp.add_xp(10)

		prompt = "–î–∞–π –∫–æ—Ä–æ—Ç–∫—É—é –±–æ–¥—Ä—É—é –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—é –º—É–∂—á–∏–Ω–µ –Ω–∞ —É—Ç—Ä–æ, –º–∞–∫—Å–∏–º—É–º 15 —Å–ª–æ–≤"
		text = await generate_reply(user_id, prompt)

		try:
			await bot.send_message(user_id_int, f'üåÖ –£—Ç—Ä–µ–Ω–Ω—è—è –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏—è:\n{text}\n+10 XP üåü')

		except Exception as e:
			print(f'[–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏]', e)

# –í–µ—á–µ—Ä–Ω—è—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è
async def evening_reflection(bot: Bot):
	print(f"üåô –í–µ—á–µ—Ä–Ω—è—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ {datetime.now()}")
	users = load_users()
	for user_id in users:
		try:
			await bot.send_message(int(user_id), "üåô –ö–∞–∫ –ø—Ä–æ—à—ë–ª –¥–µ–Ω—å? –ß—Ç–æ —É–¥–∞–ª–æ—Å—å, —á—Ç–æ –Ω–µ—Ç?")
		except Exception as e:
			print(f'[–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏]: {e}')

def setup_scheduler(bot: Bot):
	# –¢–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä - –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
	scheduler.add_job(morning_affirmation, CronTrigger(hour=7, minute=5), kwargs={'bot': bot}, id='morning_affirmation')
	scheduler.add_job(evening_reflection, CronTrigger(hour=21, minute=0), kwargs={'bot': bot},  id='evening_reflection')
	scheduler.start()
	print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")


#handlers.py file

from aiogram  import Router, types
from aiogram.filters import CommandStart, Command
import json
import os
from datetime import datetime

from core.xp_engine import XPManager

router = Router()
os.makedirs("db", exist_ok=True)
DB_PATH = os.path.join("db", 'users.json')
#-------------------------------------------------------------------------------------------------------#

#–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ JSON —Ñ–∞–π–ª–∞
def load_users():
	if not os.path.exists(DB_PATH) or os.path.getsize(DB_PATH) == 0:
		return {}
	try:
		with open(DB_PATH, 'r', encoding='utf-8') as f:
			return json.load(f)
	except json.JSONDecodeError:
		return {}
#-------------------------------------------------------------------------------------------------------#

#—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def save_user(user_id, data):
	users = load_users()
	users[str(user_id)] = data
	with open(DB_PATH, 'w', encoding='utf-8') as f:
		json.dump(users, f, ensure_ascii = False, indent = 4 )
#-------------------------------------------------------------------------------------------------------#

# –ö–æ–º–∞–Ω–¥–∞ start. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ JSON –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ –µ–≥–æ —Å—Ç–∞—Ç—É—Å–µ –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
@router.message(CommandStart())
async def start_cmd(message: types.Message):
	user = message.from_user
	user_data = {
		'id': user.id,
		'name': user.full_name,
		'username': user.username,
		'registered': datetime.now().isoformat(),
		'experience': 0,
		'level': 1
	}
	if str(user.id) in load_users():
		await message.answer("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
		return
	else:
		save_user(user.id, user_data)
		await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –≤ üåø –ß–∏—Å—Ç—ã–π –£–º.\n–¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω."')
#-------------------------------------------------------------------------------------------------------#

# –ö–æ–º–∞–Ω–¥–∞ /gainxp ‚Äî –¥–æ–±–∞–≤–∏—Ç—å XP –≤—Ä—É—á–Ω—É—é
@router.message(Command('gainxp'))
async def gain_xp_handler(message: types.Message):
	xp_manager = XPManager(user_id=message.from_user.id)
	xp_manager.add_xp(50)
	await message.answer(f"üí™ –ü–æ–ª—É—á–µ–Ω–æ 50 XP!\n{xp_manager.status()}")
#-------------------------------------------------------------------------------------------------------#

# –ö–æ–º–∞–Ω–¥–∞ /me ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
@router.message(Command('me'))
async def show_profile(message: types.Message):
	xp_manager = XPManager(user_id=message.from_user.id)
	await message.answer(xp_manager.status())
#-------------------------------------------------------------------------------------------------------#

#–≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ
@router.message()
async def intro_message(message: types.Message):
	await message.answer(
		"üåø –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ \"–ß–∏—Å—Ç—ã–π –£–º\" ‚Äî –±–æ—Ç–∞-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞ –Ω–∞ –ø—É—Ç–∏ –º—É–∂—Å–∫–æ–π —Å–∏–ª—ã –∏ —è—Å–Ω–æ—Å—Ç–∏ —Ä–∞–∑—É–º–∞.\n\n"
		"–ó–¥–µ—Å—å —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è:\n"
		"‚Äî –í–æ–∑–¥–µ—Ä–∂–∞–Ω–∏—é –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ\n"
		"‚Äî –ö–æ–Ω—Ç—Ä–æ–ª—é –Ω–∞–¥ –∏–º–ø—É–ª—å—Å–∞–º–∏\n"
		"‚Äî –°–∞–º–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—é –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é\n\n"
		"–Ø –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–æ—Ç. –Ø ‚Äî —Ç–≤–æ–π —Å–ø—É—Ç–Ω–∏–∫.\n"
		"–ù–∞–∂–º–∏ /start –∏ –Ω–∞—á–Ω—ë–º –ø—É—Ç—å üë£"
	)
#-------------------------------------------------------------------------------------------------------#